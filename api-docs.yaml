openapi: 3.0.0
info:
  title: Hotel Management API
  version: 0.1.0
  description: >-
    This is a simple CRUD API application made with Express and documented with
    Swagger
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: the auto generated id of the user
        email:
          type: string
        password:
          type: string
      example:
        id: '1'
        email: example.user@xyz.com
        password: password
    Record:
      type: object
      properties:
        id:
          type: integer
        user:
          type: object
        UserID:
          type: integer
        name:
          type: string
        stay:
          type: integer
        bill:
          type: integer
        room:
          type: string
        published:
          type: boolean
      example:
        id: '1'
        user:
          id: '1'
          email: example.user@xyz.com
          password: password
        userID: '1'
        name: exampleUser
        stay: '2'
        bill: '2000'
        room: 13B
        published: 'true'
paths:
  /user/Record/id:
    get:
      summary: Lists all the Record associated with id
      tags: [Record]
      responses:
        '200':
          description: The list of records.
          content:
            application/json:
              schema:
                $ref: '/home/Garvit/Documents/projectHotelManagement/prisma/schema.prisma'
  /user/Record/newRecord:
    post:
      summary: Creates a new Record
      tags: [Record]
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '/home/Garvit/Documents/projectHotelManagement/prisma/schema.prisma'
      responses:
        '200':
          description: The created Record.
  /user/Record/publish/{id}:
    put:
      summary: Updates a Record
      tags: [Record]
      parameters:
        - in: path
          name: id
          schema: 
            type: integer
          required: true
          description: The Record id
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '/home/Garvit/Documents/projectHotelManagement/prisma/schema.prisma'
      responses:
        '204':
          description: Update was successful.
        '404':
          description: Record not found.
  /user/Record/delete/{id}:
    delete:
      summary: Deletes a Record by id
      tags: [Record]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The Record id
      responses:
        '204':
          description: Delete was successful.
        '404':
          description: Record not found.